@page "/auth/register"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Register</PageTitle>

<section class="login-block">
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <form class="md-float-material form-material" @onsubmit="@HandleSubmit">
                    <div class="text-center">
                        <img src="images/smart-accounting-logo.png" alt="Smart Accounting" style="height: 60px; margin: 15px 0;">
                        <h4 style="color: #d4af37; margin-top: 10px;">Smart Accounting</h4>
                    </div>
                    <div class="auth-box card">
                        <div class="card-block">
                            <div class="row m-b-20">
                                <div class="col-md-12">
                                    <h3 class="text-center txt-primary">Sign up</h3>
                                </div>
                            </div>
                            
                            <div class="form-group form-primary">
                                <input type="text" class="form-control" @bind="_name" required>
                                <span class="form-bar"></span>
                                <label class="float-label">Your Name</label>
                            </div>
                            
                            <div class="form-group form-primary">
                                <input type="text" class="form-control" @bind="_email" required>
                                <span class="form-bar"></span>
                                <label class="float-label">Your Email Address</label>
                            </div>
                            
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group form-primary">
                                        <input type="password" class="form-control" @bind="_password" required>
                                        <span class="form-bar"></span>
                                        <label class="float-label">Password</label>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group form-primary">
                                        <input type="password" class="form-control" @bind="_confirmPassword" required>
                                        <span class="form-bar"></span>
                                        <label class="float-label">Confirm Password</label>
                                    </div>
                                </div>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(_errorMessage))
                            {
                                <div class="alert alert-danger" role="alert">
                                    @_errorMessage
                                </div>
                            }
                            
                            <div class="row m-t-30">
                                <div class="col-md-12">
                                    <button type="submit" class="btn btn-primary btn-md btn-block waves-effect text-center m-b-20" disabled="@_processing">
                                        @if (_processing)
                                        {
                                            <span class="spinner-border spinner-border-sm mr-1" role="status" aria-hidden="true"></span>
                                            <span>Processing...</span>
                                        }
                                        else
                                        {
                                            <span>Sign up now</span>
                                        }
                                    </button>
                                </div>
                            </div>
                            <hr/>
                            <div class="row">
                                <div class="col-md-10">
                                    <p class="text-inverse text-left">Already have an account? <a href="auth/login"><b>Login</b></a></p>
                                </div>
                                <div class="col-md-2">
                                    <img src="images/smart-accounting-logo.png" style="height: 45px;" alt="small-logo.png">
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@code {
    private string _name = string.Empty;
    private string _email = string.Empty;
    private string _password = string.Empty;
    private string _confirmPassword = string.Empty;
    private bool _success = true;
    private bool _processing;
    private string _errorMessage = string.Empty;

    private IEnumerable<string> ValidateEmail(string email)
    {
        if (string.IsNullOrWhiteSpace(email))
            yield return "Email is required";
        else if (!email.Contains('@') || !email.Contains('.'))
            yield return "Please enter a valid email address";
    }

    private IEnumerable<string> ValidatePassword(string password)
    {
        if (string.IsNullOrWhiteSpace(password))
            yield return "Password is required";
        else if (password.Length < 6)
            yield return "Password must be at least 6 characters";
    }

    private IEnumerable<string> ValidateConfirmPassword(string confirmPassword)
    {
        if (confirmPassword != _password)
            yield return "Passwords do not match";
    }

    private async Task HandleSubmit()
    {
        await RegisterAsync();
    }

    private async Task RegisterAsync()
    {
        _processing = true;
        _errorMessage = string.Empty;

        try
        {
            var user = await AuthService.RegisterAsync(_name, _email, _password);

            if (user != null)
            {
                NavigationManager.NavigateTo("/home");
            }
            else
            {
                _errorMessage = "User with this email already exists";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            _processing = false;
        }
    }
}
