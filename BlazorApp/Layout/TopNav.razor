@inject AuthService AuthService
@inject NavigationManager NavigationManager

<MudAppBar Color="Color.Primary" Fixed="true" Dense="true">
    <AuthorizeView>
        <Authorized>
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleSidebar" />
        </Authorized>
    </AuthorizeView>

    <MudText Typo="Typo.h6" Class="ml-3">MyApp</MudText>
    <MudSpacer />

    <AuthorizeView>
        <Authorized>
            <MudMenu Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <MudText Typo="Typo.body2" Class="px-4 py-2">@context.User.Identity?.Name</MudText>
                <MudDivider />
                <MudMenuItem Href="profile">Profile</MudMenuItem>
                <MudMenuItem OnClick="Logout">Logout</MudMenuItem>
            </MudMenu>
        </Authorized>
        <NotAuthorized>
            <MudButton Variant="Variant.Text" Color="Color.Inherit" Href="auth/login">Login</MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Href="auth/register" Class="ml-2">Register</MudButton>
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>

@code {
    [Parameter] public EventCallback OnSidebarToggle { get; set; }

    private async Task ToggleSidebar()
    {
        await OnSidebarToggle.InvokeAsync();
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }
}
